<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yixiang.gen.dao.YxOrderManualMapper">


  <!--  手写sql-->
<select id="getUserOrder" resultMap="orderListMap">
select
shop.shop_name AS shopName,
shop.id AS shopId,
o.no AS orderNo,
o.id AS id ,
(product.price*o.number) as amountDue,
(product.price*o.number) as aPayment,
product.name AS `name`,product.url AS url , o.number AS `number`,product.price AS price ,
(product.price*o.number) AS totalPrice,coalesce(temp.coupon_price,0) as dPayment
from  yx_order o LEFT JOIN yx_product product
on o.product_id = product.id
LEFT JOIN yx_coupon cou
on o.coupon_id = cou.coupon_id
LEFT JOIN yx_coupon_temp temp
on cou.coupon_temp_id = temp.coupon_temp_id
INNER JOIN yx_shop AS shop
on o.shop_id = shop.id
where o.consumer_id = #{userId}
and not exists (select * from yx_order ord where `no`=o.`no` and o.id>id)
</select>

  <resultMap type="co.yixiang.gen.domain.increase.ShopOrder" id="orderListMap">
    <result property="orderNo" column="orderNo"></result>
    <result property="amountDue" column="amountDue"></result>
    <result property="aPayment" column="aPayment"></result>
    <result property="dPayment" column="dPayment"></result>
    <collection property="productList" column="orderNo"  ofType="co.yixiang.gen.domain.increase.ShopProduct" select="selectShopProduct">
    </collection>
  </resultMap>




  <!--  方案2-->
  <select id="orderList2" resultMap="orderListMap2">
    select o.no AS orderNo,
    (product.price*o.number) as amountDue,
    (product.price*o.number) as aPayment,
    (product.price*o.number) as dPayment
    from yx_product product LEFT JOIN yx_order o
    ON product.shop_id = o.shop_id  AND product.p_id = o.product_id
    where o.consumer_id=#{userId}
  </select>


  <resultMap type="co.yixiang.gen.domain.increase.ShopOrder" id="orderListMap2">
    <result property="orderNo" column="orderNo"></result>
    <result property="amountDue" column="amountDue"></result>
    <result property="aPayment" column="aPayment"></result>
    <result property="dPayment" column="dPayment"></result>
    <collection property="productList"  select="selectShopProduct" javaType="ArrayList" ofType="co.yixiang.gen.domain.increase.ShopProduct" column="orderNo" >
    </collection>
  </resultMap>




  <select id="selectShopProduct" resultMap="productListMap">
        select
        product.name as `name`,product.url as `url`,
        o.number AS number, product.price as price ,
        (product.price*o.number)  as totalPrice
        from
        yx_order o LEFT JOIN yx_product product
        on o.product_id = product.id
        where o.`no` = #{no}
  </select>


  <resultMap id="productListMap" type="co.yixiang.gen.domain.increase.ShopProduct">
    <result property="name" column="name"></result>
    <result property="url" column="url"></result>
    <result property="number" column="number"></result>
    <result property="price" column="price"></result>
    <result property="totalPrice" column="totalPrice"></result>
  </resultMap>


<!--  根据店铺编号获取店铺订单-->
  <select id="getShopOrderByShopId" resultMap="orderListMap">
    select
    o.no AS orderNo,
    o.id AS id ,
    (product.price*o.number) as amountDue,
    (product.price*o.number) as aPayment,
    product.name AS `name`,product.url AS url , o.number AS `number`,product.price AS price ,
    (product.price*o.number) AS totalPrice,coalesce(temp.coupon_price,0) as dPayment
    from yx_product product LEFT JOIN yx_order o
    ON product.shop_id = o.shop_id  AND product.p_id = o.product_id
    LEFT JOIN yx_coupon coupon
    on o.coupon_id = coupon.coupon_id
    LEFT JOIN yx_coupon_temp temp
    on coupon.coupon_temp_id = temp.coupon_temp_id
    where o.shop_id=#{shopId}
    and not exists (select * from yx_order ord where `no`=o.`no` and o.id>id)
  </select>

<!--  根据订单状态返回订单集合-->
  <select id="getShopOrderByStatus" resultMap="orderListMap">
     select
    o.status AS orderStatus,
    o.no AS orderNo,
    o.id AS id ,
    (product.price*o.number) as amountDue,
    (product.price*o.number) as aPayment,
    product.name AS `name`,product.url AS url , o.number AS `number`,product.price AS price ,
    (product.price*o.number) AS totalPrice,coalesce(temp.coupon_price,0) as dPayment
    from yx_product product LEFT JOIN yx_order o
    ON product.shop_id = o.shop_id  AND product.p_id = o.product_id
    LEFT JOIN yx_coupon coupon
    on o.coupon_id = coupon.coupon_id
    LEFT JOIN yx_coupon_temp temp
    on coupon.coupon_temp_id = temp.coupon_temp_id
    where o.shop_id=#{shopId}  and o.`status` =#{status}
    and not exists (select * from yx_order ord where `no`=o.`no` and o.id>id)
  </select>


<!--   用户表  订单表  产品表   where status-->

  <select id="getOrderIndexStatus" resultMap="orderListMap">

    select
    o.status AS orderStatus,
    o.no AS orderNo,
    o.id AS id ,
    (product.price*o.number) as amountDue,
    (product.price*o.number) as aPayment,
    product.name AS `name`,product.url AS url , o.number AS `number`,product.price AS price ,
    (product.price*o.number) AS totalPrice,coalesce(temp.coupon_price,0) as dPayment


    from yx_product product LEFT JOIN yx_order o
    ON product.shop_id = o.shop_id  AND product.p_id = o.product_id
    LEFT JOIN yx_coupon coupon
    on o.coupon_id = coupon.coupon_id
    LEFT JOIN yx_coupon_temp temp
    on coupon.coupon_temp_id = temp.coupon_temp_id


    where o.consumer_id=#{userId} and o.`status` =#{status}


  </select>

</mapper>