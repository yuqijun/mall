<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yixiang.gen.dao.UserMapper">
  <resultMap id="BaseResultMap" type="co.yixiang.gen.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="avatar_id" jdbcType="BIGINT" property="avatarId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enabled" jdbcType="BIGINT" property="enabled" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_password_reset_time" jdbcType="TIMESTAMP" property="lastPasswordResetTime" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, avatar_id, email, enabled, `password`, username, dept_id, phone, job_id, create_time, 
    last_password_reset_time, nick_name, sex, type_id
  </sql>
  <select id="selectByExample" parameterType="co.yixiang.gen.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from user
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="co.yixiang.gen.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="co.yixiang.gen.domain.User">
    insert into user (id, avatar_id, email, 
      enabled, `password`, username, 
      dept_id, phone, job_id, 
      create_time, last_password_reset_time, 
      nick_name, sex, type_id
      )
    values (#{id,jdbcType=BIGINT}, #{avatarId,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{jobId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastPasswordResetTime,jdbcType=TIMESTAMP}, 
      #{nickName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="co.yixiang.gen.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="avatarId != null">
        avatar_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastPasswordResetTime != null">
        last_password_reset_time,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="avatarId != null">
        #{avatarId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetTime != null">
        #{lastPasswordResetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="co.yixiang.gen.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.avatarId != null">
        avatar_id = #{record.avatarId,jdbcType=BIGINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIGINT},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastPasswordResetTime != null">
        last_password_reset_time = #{record.lastPasswordResetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      avatar_id = #{record.avatarId,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIGINT},
      `password` = #{record.password,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=BIGINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      job_id = #{record.jobId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_password_reset_time = #{record.lastPasswordResetTime,jdbcType=TIMESTAMP},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="co.yixiang.gen.domain.User">
    update user
    <set>
      <if test="avatarId != null">
        avatar_id = #{avatarId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetTime != null">
        last_password_reset_time = #{lastPasswordResetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.yixiang.gen.domain.User">
    update user
    set avatar_id = #{avatarId,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIGINT},
      `password` = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_password_reset_time = #{lastPasswordResetTime,jdbcType=TIMESTAMP},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="co.yixiang.gen.domain.UserExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from user
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>